/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../NFTMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftCollection",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimFunds",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
    ],
    name: "Offer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OfferCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OfferFilled",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_offerId",
        type: "uint256",
      },
    ],
    name: "cancelOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_offerId",
        type: "uint256",
      },
    ],
    name: "fillOffer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "makeOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "offerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "offers",
    outputs: [
      {
        internalType: "uint256",
        name: "offerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "cancelled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b6a380380610b6a83398101604081905261002f91610054565b600380546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610ad9806100916000396000f3fe6080604052600436106100705760003560e01c806385dba8611161004e57806385dba861146100ef5780638a72ea6a14610102578063ac30777314610134578063ef706adf1461014957610070565b806305b7cdd3146100825780631115c24d146100a45780638387c6e1146100cf575b34801561007c57600080fd5b50600080fd5b34801561008e57600080fd5b506100a261009d366004610741565b610169565b005b3480156100b057600080fd5b506100b96102cc565b6040516100c691906109fd565b60405180910390f35b3480156100db57600080fd5b506100b96100ea3660046106fb565b6102d2565b6100a26100fd366004610729565b6102e4565b34801561010e57600080fd5b5061012261011d366004610729565b61049d565b6040516100c696959493929190610a25565b34801561014057600080fd5b506100a26104e1565b34801561015557600080fd5b506100a2610164366004610729565b6105a0565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061019d90339030908790600401610762565b600060405180830381600087803b1580156101b757600080fd5b505af11580156101cb573d6000803e3d6000fd5b50506000805492509050806101df83610a72565b90915550506040805160c08101825260008054808352602080840187815233858701818152606087018981526080880187815260a0890188815296885260019586905289882098518955935194880194909455516002870180546001600160a01b0319166001600160a01b03909216919091179055915160038601555160049094018054925160ff199093169415159490941761ff0019166101009215159290920291909117909255805492517f93e711896d4ef527d199d7e101922e20f918cbb248a0fb0977c52fda24aa1f1d936102c093909287928791908190610a25565b60405180910390a15050565b60005481565b60026020526000908152604090205481565b60008181526001602052604090208054821461031b5760405162461bcd60e51b815260040161031290610984565b60405180910390fd5b60028101546001600160a01b03163314156103485760405162461bcd60e51b81526004016103129061079f565b600481015460ff161561036d5760405162461bcd60e51b8152600401610312906108b2565b6004810154610100900460ff16156103975760405162461bcd60e51b8152600401610312906107e4565b806003015434146103ba5760405162461bcd60e51b8152600401610312906108f4565b60035460018201546040516323b872dd60e01b81526001600160a01b03909216916323b872dd916103f19130913391600401610762565b600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505060048201805460ff19166001179055506002808201546001600160a01b03166000908152602091909152604081208054349290610460908490610a5a565b909155505060018101546040517fd9157c065213ada613694e84b1e27fe2efd62d85c6b82bd6c842a4999491e72a916102c0918591903390610a06565b60016020819052600091825260409091208054918101546002820154600383015460049093015491926001600160a01b039091169160ff8082169161010090041686565b3360009081526002602052604090205461050d5760405162461bcd60e51b81526004016103129061086e565b3360008181526002602052604080822054905181156108fc0292818181858888f19350505050158015610544573d6000803e3d6000fd5b5033600081815260026020526040908190205490517f4f0554190111f93f8c2ccef2cc41473f187d7f29ff5a5c308ca41f9dfe4e989a92610586929091610786565b60405180910390a133600090815260026020526040812055565b6000818152600160205260409020805482146105ce5760405162461bcd60e51b815260040161031290610984565b60028101546001600160a01b031633146105fa5760405162461bcd60e51b8152600401610312906109b2565b600481015460ff161561061f5760405162461bcd60e51b815260040161031290610829565b6004810154610100900460ff16156106495760405162461bcd60e51b815260040161031290610942565b60035460018201546040516323b872dd60e01b81526001600160a01b03909216916323b872dd916106809130913391600401610762565b600060405180830381600087803b15801561069a57600080fd5b505af11580156106ae573d6000803e3d6000fd5b50505060048201805461ff0019166101001790555060018101546040517f5b166b4d0498ff8c4719999cb6154c5d197e6f020f9fbfcf9d347f84576cfab7916102c0918591903390610a06565b60006020828403121561070c578081fd5b81356001600160a01b0381168114610722578182fd5b9392505050565b60006020828403121561073a578081fd5b5035919050565b60008060408385031215610753578081fd5b50508035926020909101359150565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208082526025908201527f546865206f776e6572206f6620746865206f666665722063616e6e6f742066696040820152641b1b081a5d60da1b606082015260800190565b60208082526025908201527f412063616e63656c6c6564206f666665722063616e6e6f742062652066756c666040820152641a5b1b195960da1b606082015260800190565b60208082526025908201527f412066756c66696c6c6564206f666665722063616e6e6f742062652063616e63604082015264195b1b195960da1b606082015260800190565b60208082526024908201527f54686973207573657220686173206e6f2066756e647320746f20626520636c616040820152631a5b595960e21b606082015260800190565b60208082526022908201527f416e206f666665722063616e6e6f742062652066756c66696c6c656420747769604082015261636560f01b606082015260800190565b6020808252602e908201527f5468652045544820616d6f756e742073686f756c64206d61746368207769746860408201526d20746865204e465420507269636560901b606082015260800190565b60208082526022908201527f416e206f666665722063616e6e6f742062652063616e63656c6c656420747769604082015261636560f01b606082015260800190565b602080825260149082015273151a19481bd999995c881b5d5cdd08195e1a5cdd60621b604082015260600190565b6020808252602b908201527f546865206f666665722063616e206f6e6c792062652063616e63656c6564206260408201526a3c903a34329037bbb732b960a91b606082015260800190565b90815260200190565b92835260208301919091526001600160a01b0316604082015260600190565b95865260208601949094526001600160a01b03929092166040850152606084015215156080830152151560a082015260c00190565b60008219821115610a6d57610a6d610a8d565b500190565b6000600019821415610a8657610a86610a8d565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122034228b075aa652599825c601a76c594d22ac73b8cdce3e4ca33758679700da5764736f6c63430008010033";

export class NFTMarketplace__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nftCollection: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(
      _nftCollection,
      overrides || {}
    ) as Promise<NFTMarketplace>;
  }
  getDeployTransaction(
    _nftCollection: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nftCollection, overrides || {});
  }
  attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
