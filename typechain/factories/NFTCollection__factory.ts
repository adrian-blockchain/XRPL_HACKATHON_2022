/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTCollection, NFTCollectionInterface } from "../NFTCollection";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURIs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601181527023b0b930b3b29021b7b63632b1ba34b7b760791b6020808301918252835180850190945260038452621090d360ea1b908401528151919291620000669160009162000085565b5080516200007c90600190602084019062000085565b50505062000168565b82805462000093906200012b565b90600052602060002090601f016020900481019282620000b7576000855562000102565b82601f10620000d257805160ff191683800117855562000102565b8280016001018555821562000102579182015b8281111562000102578251825591602001919060010190620000e5565b506200011092915062000114565b5090565b5b8082111562000110576000815560010162000115565b6002810460018216806200014057607f821691505b602082108114156200016257634e487b7160e01b600052602260045260246000fd5b50919050565b611ab880620001786000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a257806395d89b411161007157806395d89b411461023b578063a22cb46514610243578063b88d4fde14610256578063c87b56dd14610269578063e985e9c51461027c57610116565b80636352211e146101ef578063695850fb146102025780636c8b703f1461021557806370a082311461022857610116565b806318160ddd116100e957806318160ddd1461018e57806323b872dd146101a35780632f745c59146101b657806342842e0e146101c95780634f6ccce7146101dc57610116565b806301ffc9a71461011b57806306fdde0314610144578063081812fc14610159578063095ea7b314610179575b600080fd5b61012e61012936600461139c565b61028f565b60405161013b91906114cb565b60405180910390f35b61014c6102a2565b60405161013b91906114d6565b61016c61016736600461141a565b610334565b60405161013b919061147a565b61018c610187366004611373565b610380565b005b610196610418565b60405161013b919061199e565b61018c6101b1366004611285565b61041e565b6101966101c4366004611373565b610456565b61018c6101d7366004611285565b6104a8565b6101966101ea36600461141a565b6104c3565b61016c6101fd36600461141a565b61051e565b61018c6102103660046113d4565b610553565b61014c61022336600461141a565b61063a565b610196610236366004611232565b6106e6565b61014c61072a565b61018c610251366004611339565b610739565b61018c6102643660046112c0565b61074f565b61014c61027736600461141a565b61078e565b61012e61028a366004611253565b610853565b600061029a82610881565b90505b919050565b6060600080546102b190611a02565b80601f01602080910402602001604051908101604052809291908181526020018280546102dd90611a02565b801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b5050505050905090565b600061033f826108a6565b6103645760405162461bcd60e51b815260040161035b90611825565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061038b8261051e565b9050806001600160a01b0316836001600160a01b031614156103bf5760405162461bcd60e51b815260040161035b906118c0565b806001600160a01b03166103d16108c3565b6001600160a01b031614806103ed57506103ed8161028a6108c3565b6104095760405162461bcd60e51b815260040161035b90611700565b61041383836108c7565b505050565b60085490565b61042f6104296108c3565b82610935565b61044b5760405162461bcd60e51b815260040161035b90611901565b6104138383836109ba565b6000610461836106e6565b821061047f5760405162461bcd60e51b815260040161035b906114e9565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6104138383836040518060200160405280600081525061074f565b60006104cd610418565b82106104eb5760405162461bcd60e51b815260040161035b90611952565b6008828154811061050c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061029a5760405162461bcd60e51b815260040161035b906117a7565b600b81604051610563919061145e565b9081526040519081900360200190205460ff16156105935760405162461bcd60e51b815260040161035b906116c9565b600a805460018101825560009190915281516105d6917fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80190602084019061110c565b50600a546000818152600c6020908152604090912083516105f99285019061110c565b506106043382610aed565b6001600b83604051610616919061145e565b908152604051908190036020019020805491151560ff199092169190911790555050565b600a818154811061064a57600080fd5b90600052602060002001600091509050805461066590611a02565b80601f016020809104026020016040519081016040528092919081815260200182805461069190611a02565b80156106de5780601f106106b3576101008083540402835291602001916106de565b820191906000526020600020905b8154815290600101906020018083116106c157829003601f168201915b505050505081565b60006001600160a01b03821661070e5760405162461bcd60e51b815260040161035b9061175d565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b190611a02565b61074b6107446108c3565b8383610b07565b5050565b61076061075a6108c3565b83610935565b61077c5760405162461bcd60e51b815260040161035b90611901565b61078884848484610baa565b50505050565b6060610799826108a6565b6107b55760405162461bcd60e51b815260040161035b90611871565b6000828152600c6020526040902080546107ce90611a02565b80601f01602080910402602001604051908101604052809291908181526020018280546107fa90611a02565b80156108475780601f1061081c57610100808354040283529160200191610847565b820191906000526020600020905b81548152906001019060200180831161082a57829003601f168201915b50505050509050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b148061029a575061029a82610bdd565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108fc8261051e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610940826108a6565b61095c5760405162461bcd60e51b815260040161035b9061167d565b60006109678361051e565b9050806001600160a01b0316846001600160a01b031614806109a25750836001600160a01b031661099784610334565b6001600160a01b0316145b806109b257506109b28185610853565b949350505050565b826001600160a01b03166109cd8261051e565b6001600160a01b0316146109f35760405162461bcd60e51b815260040161035b90611586565b6001600160a01b038216610a195760405162461bcd60e51b815260040161035b90611602565b610a24838383610c1d565b610a2f6000826108c7565b6001600160a01b0383166000908152600360205260408120805460019290610a589084906119bf565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a869084906119a7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4610413838383610413565b61074b828260405180602001604052806000815250610c28565b816001600160a01b0316836001600160a01b03161415610b395760405162461bcd60e51b815260040161035b90611646565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610b9d9085906114cb565b60405180910390a3505050565b610bb58484846109ba565b610bc184848484610c5b565b6107885760405162461bcd60e51b815260040161035b90611534565b60006001600160e01b031982166380ac58cd60e01b1480610c0e57506001600160e01b03198216635b5e139f60e01b145b8061029a575061029a82610d76565b610413838383610d8f565b610c328383610e18565b610c3f6000848484610c5b565b6104135760405162461bcd60e51b815260040161035b90611534565b6000610c6f846001600160a01b0316610eff565b15610d6b57836001600160a01b031663150b7a02610c8b6108c3565b8786866040518563ffffffff1660e01b8152600401610cad949392919061148e565b602060405180830381600087803b158015610cc757600080fd5b505af1925050508015610cf7575060408051601f3d908101601f19168201909252610cf4918101906113b8565b60015b610d51573d808015610d25576040519150601f19603f3d011682016040523d82523d6000602084013e610d2a565b606091505b508051610d495760405162461bcd60e51b815260040161035b90611534565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109b2565b506001949350505050565b6001600160e01b031981166301ffc9a760e01b14919050565b610d9a838383610413565b6001600160a01b038316610db657610db181610f0e565b610dd9565b816001600160a01b0316836001600160a01b031614610dd957610dd98382610f52565b6001600160a01b038216610df557610df081610fef565b610413565b826001600160a01b0316826001600160a01b0316146104135761041382826110c8565b6001600160a01b038216610e3e5760405162461bcd60e51b815260040161035b906117f0565b610e47816108a6565b15610e645760405162461bcd60e51b815260040161035b906115cb565b610e7060008383610c1d565b6001600160a01b0382166000908152600360205260408120805460019290610e999084906119a7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461074b60008383610413565b6001600160a01b03163b151590565b600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b60006001610f5f846106e6565b610f6991906119bf565b600083815260076020526040902054909150808214610fbc576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611001906001906119bf565b6000838152600960205260408120546008805493945090928490811061103757634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050806008838154811061106657634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806110ac57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b60006110d3836106e6565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461111890611a02565b90600052602060002090601f01602090048101928261113a5760008555611180565b82601f1061115357805160ff1916838001178555611180565b82800160010185558215611180579182015b82811115611180578251825591602001919060010190611165565b5061118c929150611190565b5090565b5b8082111561118c5760008155600101611191565b600067ffffffffffffffff808411156111c0576111c0611a53565b604051601f8501601f19908116603f011681019082821181831017156111e8576111e8611a53565b8160405280935085815286868601111561120157600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461029d57600080fd5b600060208284031215611243578081fd5b61124c8261121b565b9392505050565b60008060408385031215611265578081fd5b61126e8361121b565b915061127c6020840161121b565b90509250929050565b600080600060608486031215611299578081fd5b6112a28461121b565b92506112b06020850161121b565b9150604084013590509250925092565b600080600080608085870312156112d5578081fd5b6112de8561121b565b93506112ec6020860161121b565b925060408501359150606085013567ffffffffffffffff81111561130e578182fd5b8501601f8101871361131e578182fd5b61132d878235602084016111a5565b91505092959194509250565b6000806040838503121561134b578182fd5b6113548361121b565b915060208301358015158114611368578182fd5b809150509250929050565b60008060408385031215611385578182fd5b61138e8361121b565b946020939093013593505050565b6000602082840312156113ad578081fd5b813561124c81611a69565b6000602082840312156113c9578081fd5b815161124c81611a69565b6000602082840312156113e5578081fd5b813567ffffffffffffffff8111156113fb578182fd5b8201601f8101841361140b578182fd5b6109b2848235602084016111a5565b60006020828403121561142b578081fd5b5035919050565b6000815180845261144a8160208601602086016119d6565b601f01601f19169290920160200192915050565b600082516114708184602087016119d6565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114c190830184611432565b9695505050505050565b901515815260200190565b60006020825261124c6020830184611432565b6020808252602b908201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560408201526a74206f6620626f756e647360a81b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252601e908201527f54686520746f6b656e205552492073686f756c6420626520756e697175650000604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252602c908201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60408201526b7574206f6620626f756e647360a01b606082015260800190565b90815260200190565b600082198211156119ba576119ba611a3d565b500190565b6000828210156119d1576119d1611a3d565b500390565b60005b838110156119f15781810151838201526020016119d9565b838111156107885750506000910152565b600281046001821680611a1657607f821691505b60208210811415611a3757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114611a7f57600080fd5b5056fea26469706673582212205797c861750cafcfe5e5cf2e41d95a036fcb4fce244d863da8fe300a5c42fba564736f6c63430008010033";

export class NFTCollection__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTCollection> {
    return super.deploy(overrides || {}) as Promise<NFTCollection>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTCollection {
    return super.attach(address) as NFTCollection;
  }
  connect(signer: Signer): NFTCollection__factory {
    return super.connect(signer) as NFTCollection__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTCollectionInterface {
    return new utils.Interface(_abi) as NFTCollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTCollection {
    return new Contract(address, _abi, signerOrProvider) as NFTCollection;
  }
}
